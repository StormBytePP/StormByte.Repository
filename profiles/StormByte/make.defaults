# Use defaults
USE="branding cjk unicode pic icu -bindist verify-sig"

# Compiler custom optimizations
COMPILER_OPTIMIZATION_BASE="-O2 -pipe"
COMPILER_OPTIMIZATION_CPU="-march=native"
COMPILER_OPTIMIZATION_GCC="-fgraphite -fgraphite-identity -floop-block -floop-interchange -floop-parallelize-all -floop-strip-mine -ftree-loop-distribution -ftree-loop-linear"
COMPILER_OPTIMIZATION_CLANG="-Wno-unused-command-line-argument -Wno-unknown-attributes"
COMPILER_OPTIMIZATION_DEBUG="-g -ggdb"
COMPILER_OPTIMIZATION_LTO="-flto=thin"

# Linker optimizations
LINKER_OPTIMIZATION_BASE="-Wl,--as-needed -Wl,--sort-common -Wl,-O2"
LINKER_OPTIMIZATION_BFD="-fuse-ld=bfd"
LINKER_OPTIMIZATION_GOLD="-fuse-ld=gold"
LINKER_OPTIMIZATION_LLD="-fuse-ld=lld"

# Portage folders
BASEDIR="/var/db/repos"
PKGDIR="${BASEDIR}/packages"
DISTDIR="/distfiles"
PORTAGE_TMPDIR="/tmp"

# Licenses
ACCEPT_LICENSE="*"

# Environment
GRUB_PLATFORMS="efi-64"
VIDEO_CARDS="nvidia"
INPUT_DEVICES="libinput"
LLVM_TARGETS="X86"

ABI_X86="64"
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt rdrand sha sse sse2 sse3 sse4_1 sse4_2 ssse3"
ACCEPT_KEYWORDS="~amd64"
CHOST="x86_64-pc-linux-gnu"
CFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU} ${COMPILER_OPTIMIZATION_GCC}"
CXXFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU} ${COMPILER_OPTIMIZATION_GCC}"
FCFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU}"
FFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU}"
RUSTFLAGS="-Ctarget-cpu=native -Copt-level=3"
LDFLAGS="${LINKER_OPTIMIZATION_BASE}"
